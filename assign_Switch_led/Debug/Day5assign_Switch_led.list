
Day5assign_Switch_led.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000418  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005a0  080005a0  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005a0  080005a0  00002004  2**0
                  CONTENTS
  4 .ARM          00000000  080005a0  080005a0  00002004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005a0  080005a0  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005a0  080005a0  000015a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080005a4  080005a4  000015a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  080005a8  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002004  2**0
                  CONTENTS
 10 .bss          00000020  20000004  20000004  00002004  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000024  20000024  00002004  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000137c  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000004c8  00000000  00000000  000033b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000f8  00000000  00000000  00003878  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000a3  00000000  00000000  00003970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000180f6  00000000  00000000  00003a13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001424  00000000  00000000  0001bb09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008bdf4  00000000  00000000  0001cf2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a8d21  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  000a8d64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000001f  00000000  00000000  000a8fb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000065  00000000  00000000  000a8fcf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000004 	.word	0x20000004
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000588 	.word	0x08000588

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000008 	.word	0x20000008
 80001c4:	08000588 	.word	0x08000588

080001c8 <DelayMs>:
 80001c8:	b480      	push	{r7}
 80001ca:	b085      	sub	sp, #20
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	4b0e      	ldr	r3, [pc, #56]	@ (800020c <DelayMs+0x44>)
 80001d2:	685b      	ldr	r3, [r3, #4]
 80001d4:	60fb      	str	r3, [r7, #12]
 80001d6:	4b0e      	ldr	r3, [pc, #56]	@ (8000210 <DelayMs+0x48>)
 80001d8:	681b      	ldr	r3, [r3, #0]
 80001da:	4a0e      	ldr	r2, [pc, #56]	@ (8000214 <DelayMs+0x4c>)
 80001dc:	fba2 2303 	umull	r2, r3, r2, r3
 80001e0:	099b      	lsrs	r3, r3, #6
 80001e2:	60bb      	str	r3, [r7, #8]
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	68ba      	ldr	r2, [r7, #8]
 80001e8:	fb02 f303 	mul.w	r3, r2, r3
 80001ec:	607b      	str	r3, [r7, #4]
 80001ee:	bf00      	nop
 80001f0:	4b06      	ldr	r3, [pc, #24]	@ (800020c <DelayMs+0x44>)
 80001f2:	685a      	ldr	r2, [r3, #4]
 80001f4:	68fb      	ldr	r3, [r7, #12]
 80001f6:	1ad2      	subs	r2, r2, r3
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	429a      	cmp	r2, r3
 80001fc:	d3f8      	bcc.n	80001f0 <DelayMs+0x28>
 80001fe:	bf00      	nop
 8000200:	bf00      	nop
 8000202:	3714      	adds	r7, #20
 8000204:	46bd      	mov	sp, r7
 8000206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020a:	4770      	bx	lr
 800020c:	e0001000 	.word	0xe0001000
 8000210:	20000000 	.word	0x20000000
 8000214:	10624dd3 	.word	0x10624dd3

08000218 <LedInit>:
 8000218:	b480      	push	{r7}
 800021a:	b083      	sub	sp, #12
 800021c:	af00      	add	r7, sp, #0
 800021e:	6078      	str	r0, [r7, #4]
 8000220:	4b29      	ldr	r3, [pc, #164]	@ (80002c8 <LedInit+0xb0>)
 8000222:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000224:	4a28      	ldr	r2, [pc, #160]	@ (80002c8 <LedInit+0xb0>)
 8000226:	f043 0308 	orr.w	r3, r3, #8
 800022a:	6313      	str	r3, [r2, #48]	@ 0x30
 800022c:	4b27      	ldr	r3, [pc, #156]	@ (80002cc <LedInit+0xb4>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	687a      	ldr	r2, [r7, #4]
 8000232:	0052      	lsls	r2, r2, #1
 8000234:	3201      	adds	r2, #1
 8000236:	2101      	movs	r1, #1
 8000238:	fa01 f202 	lsl.w	r2, r1, r2
 800023c:	43d2      	mvns	r2, r2
 800023e:	4611      	mov	r1, r2
 8000240:	4a22      	ldr	r2, [pc, #136]	@ (80002cc <LedInit+0xb4>)
 8000242:	400b      	ands	r3, r1
 8000244:	6013      	str	r3, [r2, #0]
 8000246:	4b21      	ldr	r3, [pc, #132]	@ (80002cc <LedInit+0xb4>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	687a      	ldr	r2, [r7, #4]
 800024c:	0052      	lsls	r2, r2, #1
 800024e:	2101      	movs	r1, #1
 8000250:	fa01 f202 	lsl.w	r2, r1, r2
 8000254:	4611      	mov	r1, r2
 8000256:	4a1d      	ldr	r2, [pc, #116]	@ (80002cc <LedInit+0xb4>)
 8000258:	430b      	orrs	r3, r1
 800025a:	6013      	str	r3, [r2, #0]
 800025c:	4b1b      	ldr	r3, [pc, #108]	@ (80002cc <LedInit+0xb4>)
 800025e:	685b      	ldr	r3, [r3, #4]
 8000260:	2101      	movs	r1, #1
 8000262:	687a      	ldr	r2, [r7, #4]
 8000264:	fa01 f202 	lsl.w	r2, r1, r2
 8000268:	43d2      	mvns	r2, r2
 800026a:	4611      	mov	r1, r2
 800026c:	4a17      	ldr	r2, [pc, #92]	@ (80002cc <LedInit+0xb4>)
 800026e:	400b      	ands	r3, r1
 8000270:	6053      	str	r3, [r2, #4]
 8000272:	4b16      	ldr	r3, [pc, #88]	@ (80002cc <LedInit+0xb4>)
 8000274:	689b      	ldr	r3, [r3, #8]
 8000276:	687a      	ldr	r2, [r7, #4]
 8000278:	0052      	lsls	r2, r2, #1
 800027a:	3201      	adds	r2, #1
 800027c:	2101      	movs	r1, #1
 800027e:	4091      	lsls	r1, r2
 8000280:	687a      	ldr	r2, [r7, #4]
 8000282:	0052      	lsls	r2, r2, #1
 8000284:	2001      	movs	r0, #1
 8000286:	fa00 f202 	lsl.w	r2, r0, r2
 800028a:	430a      	orrs	r2, r1
 800028c:	43d2      	mvns	r2, r2
 800028e:	4611      	mov	r1, r2
 8000290:	4a0e      	ldr	r2, [pc, #56]	@ (80002cc <LedInit+0xb4>)
 8000292:	400b      	ands	r3, r1
 8000294:	6093      	str	r3, [r2, #8]
 8000296:	4b0d      	ldr	r3, [pc, #52]	@ (80002cc <LedInit+0xb4>)
 8000298:	68db      	ldr	r3, [r3, #12]
 800029a:	687a      	ldr	r2, [r7, #4]
 800029c:	0052      	lsls	r2, r2, #1
 800029e:	3201      	adds	r2, #1
 80002a0:	2101      	movs	r1, #1
 80002a2:	4091      	lsls	r1, r2
 80002a4:	687a      	ldr	r2, [r7, #4]
 80002a6:	0052      	lsls	r2, r2, #1
 80002a8:	2001      	movs	r0, #1
 80002aa:	fa00 f202 	lsl.w	r2, r0, r2
 80002ae:	430a      	orrs	r2, r1
 80002b0:	43d2      	mvns	r2, r2
 80002b2:	4611      	mov	r1, r2
 80002b4:	4a05      	ldr	r2, [pc, #20]	@ (80002cc <LedInit+0xb4>)
 80002b6:	400b      	ands	r3, r1
 80002b8:	60d3      	str	r3, [r2, #12]
 80002ba:	bf00      	nop
 80002bc:	370c      	adds	r7, #12
 80002be:	46bd      	mov	sp, r7
 80002c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c4:	4770      	bx	lr
 80002c6:	bf00      	nop
 80002c8:	40023800 	.word	0x40023800
 80002cc:	40020c00 	.word	0x40020c00

080002d0 <LedOn>:
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	4b07      	ldr	r3, [pc, #28]	@ (80002f8 <LedOn+0x28>)
 80002da:	695b      	ldr	r3, [r3, #20]
 80002dc:	2101      	movs	r1, #1
 80002de:	687a      	ldr	r2, [r7, #4]
 80002e0:	fa01 f202 	lsl.w	r2, r1, r2
 80002e4:	4611      	mov	r1, r2
 80002e6:	4a04      	ldr	r2, [pc, #16]	@ (80002f8 <LedOn+0x28>)
 80002e8:	430b      	orrs	r3, r1
 80002ea:	6153      	str	r3, [r2, #20]
 80002ec:	bf00      	nop
 80002ee:	370c      	adds	r7, #12
 80002f0:	46bd      	mov	sp, r7
 80002f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f6:	4770      	bx	lr
 80002f8:	40020c00 	.word	0x40020c00

080002fc <LedOff>:
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	6078      	str	r0, [r7, #4]
 8000304:	4b08      	ldr	r3, [pc, #32]	@ (8000328 <LedOff+0x2c>)
 8000306:	695b      	ldr	r3, [r3, #20]
 8000308:	2101      	movs	r1, #1
 800030a:	687a      	ldr	r2, [r7, #4]
 800030c:	fa01 f202 	lsl.w	r2, r1, r2
 8000310:	43d2      	mvns	r2, r2
 8000312:	4611      	mov	r1, r2
 8000314:	4a04      	ldr	r2, [pc, #16]	@ (8000328 <LedOff+0x2c>)
 8000316:	400b      	ands	r3, r1
 8000318:	6153      	str	r3, [r2, #20]
 800031a:	bf00      	nop
 800031c:	370c      	adds	r7, #12
 800031e:	46bd      	mov	sp, r7
 8000320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000324:	4770      	bx	lr
 8000326:	bf00      	nop
 8000328:	40020c00 	.word	0x40020c00

0800032c <LedBlink>:
 800032c:	b580      	push	{r7, lr}
 800032e:	b082      	sub	sp, #8
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
 8000334:	6039      	str	r1, [r7, #0]
 8000336:	6878      	ldr	r0, [r7, #4]
 8000338:	f7ff ffca 	bl	80002d0 <LedOn>
 800033c:	6838      	ldr	r0, [r7, #0]
 800033e:	f7ff ff43 	bl	80001c8 <DelayMs>
 8000342:	6878      	ldr	r0, [r7, #4]
 8000344:	f7ff ffda 	bl	80002fc <LedOff>
 8000348:	bf00      	nop
 800034a:	3708      	adds	r7, #8
 800034c:	46bd      	mov	sp, r7
 800034e:	bd80      	pop	{r7, pc}

08000350 <main>:
/*
Orange LED will blink when switch is pressed -- Any Optimization Level
As flag is declared volatile.
*/

int main(void) {
 8000350:	b580      	push	{r7, lr}
 8000352:	af00      	add	r7, sp, #0
	SystemInit();
 8000354:	f000 f894 	bl	8000480 <SystemInit>
	SwitchInit();
 8000358:	f000 f84a 	bl	80003f0 <SwitchInit>
	LedInit(LED_ORANGE_PIN);
 800035c:	200d      	movs	r0, #13
 800035e:	f7ff ff5b 	bl	8000218 <LedInit>

	while(1) {
		// if switch is pressed blink orange led
		while(SwitchExtiFlag == 0)
 8000362:	bf00      	nop
 8000364:	4b12      	ldr	r3, [pc, #72]	@ (80003b0 <main+0x60>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	2b00      	cmp	r3, #0
 800036a:	d0fb      	beq.n	8000364 <main+0x14>
		loop:
			LDR r0, [r7]				// r0 = *r7;
			CMP r0, #0					// r0 == 0 (compare)
			BEQ loop					// if 0, repeat loop
		*/
		LedInit(LED_RED_PIN);
 800036c:	200e      	movs	r0, #14
 800036e:	f7ff ff53 	bl	8000218 <LedInit>
		LedInit(LED_BLUE_PIN);
 8000372:	200f      	movs	r0, #15
 8000374:	f7ff ff50 	bl	8000218 <LedInit>
		LedInit(LED_GREEN_PIN);
 8000378:	200c      	movs	r0, #12
 800037a:	f7ff ff4d 	bl	8000218 <LedInit>



		LedBlink(LED_ORANGE_PIN, 1000);
 800037e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000382:	200d      	movs	r0, #13
 8000384:	f7ff ffd2 	bl	800032c <LedBlink>
		LedBlink(LED_RED_PIN,1000);
 8000388:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800038c:	200e      	movs	r0, #14
 800038e:	f7ff ffcd 	bl	800032c <LedBlink>
		LedBlink(LED_RED_PIN,1000);
 8000392:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000396:	200e      	movs	r0, #14
 8000398:	f7ff ffc8 	bl	800032c <LedBlink>
		LedBlink(LED_GREEN_PIN,1000);
 800039c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80003a0:	200c      	movs	r0, #12
 80003a2:	f7ff ffc3 	bl	800032c <LedBlink>


		SwitchExtiFlag = 0;
 80003a6:	4b02      	ldr	r3, [pc, #8]	@ (80003b0 <main+0x60>)
 80003a8:	2200      	movs	r2, #0
 80003aa:	601a      	str	r2, [r3, #0]
		while(SwitchExtiFlag == 0)
 80003ac:	e7d9      	b.n	8000362 <main+0x12>
 80003ae:	bf00      	nop
 80003b0:	20000020 	.word	0x20000020

080003b4 <__NVIC_EnableIRQ>:
 80003b4:	b480      	push	{r7}
 80003b6:	b083      	sub	sp, #12
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	4603      	mov	r3, r0
 80003bc:	71fb      	strb	r3, [r7, #7]
 80003be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003c2:	2b00      	cmp	r3, #0
 80003c4:	db0b      	blt.n	80003de <__NVIC_EnableIRQ+0x2a>
 80003c6:	79fb      	ldrb	r3, [r7, #7]
 80003c8:	f003 021f 	and.w	r2, r3, #31
 80003cc:	4907      	ldr	r1, [pc, #28]	@ (80003ec <__NVIC_EnableIRQ+0x38>)
 80003ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003d2:	095b      	lsrs	r3, r3, #5
 80003d4:	2001      	movs	r0, #1
 80003d6:	fa00 f202 	lsl.w	r2, r0, r2
 80003da:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80003de:	bf00      	nop
 80003e0:	370c      	adds	r7, #12
 80003e2:	46bd      	mov	sp, r7
 80003e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e8:	4770      	bx	lr
 80003ea:	bf00      	nop
 80003ec:	e000e100 	.word	0xe000e100

080003f0 <SwitchInit>:
 80003f0:	b580      	push	{r7, lr}
 80003f2:	af00      	add	r7, sp, #0
 80003f4:	4b14      	ldr	r3, [pc, #80]	@ (8000448 <SwitchInit+0x58>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f8:	4a13      	ldr	r2, [pc, #76]	@ (8000448 <SwitchInit+0x58>)
 80003fa:	f043 0301 	orr.w	r3, r3, #1
 80003fe:	6313      	str	r3, [r2, #48]	@ 0x30
 8000400:	4b12      	ldr	r3, [pc, #72]	@ (800044c <SwitchInit+0x5c>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	4a11      	ldr	r2, [pc, #68]	@ (800044c <SwitchInit+0x5c>)
 8000406:	f023 0303 	bic.w	r3, r3, #3
 800040a:	6013      	str	r3, [r2, #0]
 800040c:	4b0f      	ldr	r3, [pc, #60]	@ (800044c <SwitchInit+0x5c>)
 800040e:	68db      	ldr	r3, [r3, #12]
 8000410:	4a0e      	ldr	r2, [pc, #56]	@ (800044c <SwitchInit+0x5c>)
 8000412:	f023 0303 	bic.w	r3, r3, #3
 8000416:	60d3      	str	r3, [r2, #12]
 8000418:	4b0d      	ldr	r3, [pc, #52]	@ (8000450 <SwitchInit+0x60>)
 800041a:	68db      	ldr	r3, [r3, #12]
 800041c:	4a0c      	ldr	r2, [pc, #48]	@ (8000450 <SwitchInit+0x60>)
 800041e:	f043 0301 	orr.w	r3, r3, #1
 8000422:	60d3      	str	r3, [r2, #12]
 8000424:	4b0a      	ldr	r3, [pc, #40]	@ (8000450 <SwitchInit+0x60>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	4a09      	ldr	r2, [pc, #36]	@ (8000450 <SwitchInit+0x60>)
 800042a:	f043 0301 	orr.w	r3, r3, #1
 800042e:	6013      	str	r3, [r2, #0]
 8000430:	4b08      	ldr	r3, [pc, #32]	@ (8000454 <SwitchInit+0x64>)
 8000432:	689b      	ldr	r3, [r3, #8]
 8000434:	4a07      	ldr	r2, [pc, #28]	@ (8000454 <SwitchInit+0x64>)
 8000436:	f023 030f 	bic.w	r3, r3, #15
 800043a:	6093      	str	r3, [r2, #8]
 800043c:	2006      	movs	r0, #6
 800043e:	f7ff ffb9 	bl	80003b4 <__NVIC_EnableIRQ>
 8000442:	bf00      	nop
 8000444:	bd80      	pop	{r7, pc}
 8000446:	bf00      	nop
 8000448:	40023800 	.word	0x40023800
 800044c:	40020000 	.word	0x40020000
 8000450:	40013c00 	.word	0x40013c00
 8000454:	40013800 	.word	0x40013800

08000458 <EXTI0_IRQHandler>:
 8000458:	b480      	push	{r7}
 800045a:	af00      	add	r7, sp, #0
 800045c:	4b06      	ldr	r3, [pc, #24]	@ (8000478 <EXTI0_IRQHandler+0x20>)
 800045e:	695b      	ldr	r3, [r3, #20]
 8000460:	4a05      	ldr	r2, [pc, #20]	@ (8000478 <EXTI0_IRQHandler+0x20>)
 8000462:	f043 0301 	orr.w	r3, r3, #1
 8000466:	6153      	str	r3, [r2, #20]
 8000468:	4b04      	ldr	r3, [pc, #16]	@ (800047c <EXTI0_IRQHandler+0x24>)
 800046a:	2201      	movs	r2, #1
 800046c:	601a      	str	r2, [r3, #0]
 800046e:	bf00      	nop
 8000470:	46bd      	mov	sp, r7
 8000472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000476:	4770      	bx	lr
 8000478:	40013c00 	.word	0x40013c00
 800047c:	20000020 	.word	0x20000020

08000480 <SystemInit>:
 8000480:	b580      	push	{r7, lr}
 8000482:	af00      	add	r7, sp, #0
 8000484:	f000 f802 	bl	800048c <DWT_Init>
 8000488:	bf00      	nop
 800048a:	bd80      	pop	{r7, pc}

0800048c <DWT_Init>:
 800048c:	b480      	push	{r7}
 800048e:	af00      	add	r7, sp, #0
 8000490:	4b14      	ldr	r3, [pc, #80]	@ (80004e4 <DWT_Init+0x58>)
 8000492:	68db      	ldr	r3, [r3, #12]
 8000494:	4a13      	ldr	r2, [pc, #76]	@ (80004e4 <DWT_Init+0x58>)
 8000496:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800049a:	60d3      	str	r3, [r2, #12]
 800049c:	4b11      	ldr	r3, [pc, #68]	@ (80004e4 <DWT_Init+0x58>)
 800049e:	68db      	ldr	r3, [r3, #12]
 80004a0:	4a10      	ldr	r2, [pc, #64]	@ (80004e4 <DWT_Init+0x58>)
 80004a2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80004a6:	60d3      	str	r3, [r2, #12]
 80004a8:	4b0f      	ldr	r3, [pc, #60]	@ (80004e8 <DWT_Init+0x5c>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	4a0e      	ldr	r2, [pc, #56]	@ (80004e8 <DWT_Init+0x5c>)
 80004ae:	f023 0301 	bic.w	r3, r3, #1
 80004b2:	6013      	str	r3, [r2, #0]
 80004b4:	4b0c      	ldr	r3, [pc, #48]	@ (80004e8 <DWT_Init+0x5c>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a0b      	ldr	r2, [pc, #44]	@ (80004e8 <DWT_Init+0x5c>)
 80004ba:	f043 0301 	orr.w	r3, r3, #1
 80004be:	6013      	str	r3, [r2, #0]
 80004c0:	4b09      	ldr	r3, [pc, #36]	@ (80004e8 <DWT_Init+0x5c>)
 80004c2:	2200      	movs	r2, #0
 80004c4:	605a      	str	r2, [r3, #4]
 80004c6:	bf00      	nop
 80004c8:	bf00      	nop
 80004ca:	bf00      	nop
 80004cc:	4b06      	ldr	r3, [pc, #24]	@ (80004e8 <DWT_Init+0x5c>)
 80004ce:	685b      	ldr	r3, [r3, #4]
 80004d0:	2b00      	cmp	r3, #0
 80004d2:	bf0c      	ite	eq
 80004d4:	2301      	moveq	r3, #1
 80004d6:	2300      	movne	r3, #0
 80004d8:	b2db      	uxtb	r3, r3
 80004da:	4618      	mov	r0, r3
 80004dc:	46bd      	mov	sp, r7
 80004de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e2:	4770      	bx	lr
 80004e4:	e000edf0 	.word	0xe000edf0
 80004e8:	e0001000 	.word	0xe0001000

080004ec <Reset_Handler>:
 80004ec:	480d      	ldr	r0, [pc, #52]	@ (8000524 <LoopForever+0x2>)
 80004ee:	4685      	mov	sp, r0
 80004f0:	f7ff ffc6 	bl	8000480 <SystemInit>
 80004f4:	480c      	ldr	r0, [pc, #48]	@ (8000528 <LoopForever+0x6>)
 80004f6:	490d      	ldr	r1, [pc, #52]	@ (800052c <LoopForever+0xa>)
 80004f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000530 <LoopForever+0xe>)
 80004fa:	2300      	movs	r3, #0
 80004fc:	e002      	b.n	8000504 <LoopCopyDataInit>

080004fe <CopyDataInit>:
 80004fe:	58d4      	ldr	r4, [r2, r3]
 8000500:	50c4      	str	r4, [r0, r3]
 8000502:	3304      	adds	r3, #4

08000504 <LoopCopyDataInit>:
 8000504:	18c4      	adds	r4, r0, r3
 8000506:	428c      	cmp	r4, r1
 8000508:	d3f9      	bcc.n	80004fe <CopyDataInit>
 800050a:	4a0a      	ldr	r2, [pc, #40]	@ (8000534 <LoopForever+0x12>)
 800050c:	4c0a      	ldr	r4, [pc, #40]	@ (8000538 <LoopForever+0x16>)
 800050e:	2300      	movs	r3, #0
 8000510:	e001      	b.n	8000516 <LoopFillZerobss>

08000512 <FillZerobss>:
 8000512:	6013      	str	r3, [r2, #0]
 8000514:	3204      	adds	r2, #4

08000516 <LoopFillZerobss>:
 8000516:	42a2      	cmp	r2, r4
 8000518:	d3fb      	bcc.n	8000512 <FillZerobss>
 800051a:	f000 f811 	bl	8000540 <__libc_init_array>
 800051e:	f7ff ff17 	bl	8000350 <main>

08000522 <LoopForever>:
 8000522:	e7fe      	b.n	8000522 <LoopForever>
 8000524:	20020000 	.word	0x20020000
 8000528:	20000000 	.word	0x20000000
 800052c:	20000004 	.word	0x20000004
 8000530:	080005a8 	.word	0x080005a8
 8000534:	20000004 	.word	0x20000004
 8000538:	20000024 	.word	0x20000024

0800053c <ADC_IRQHandler>:
 800053c:	e7fe      	b.n	800053c <ADC_IRQHandler>
	...

08000540 <__libc_init_array>:
 8000540:	b570      	push	{r4, r5, r6, lr}
 8000542:	4d0d      	ldr	r5, [pc, #52]	@ (8000578 <__libc_init_array+0x38>)
 8000544:	4c0d      	ldr	r4, [pc, #52]	@ (800057c <__libc_init_array+0x3c>)
 8000546:	1b64      	subs	r4, r4, r5
 8000548:	10a4      	asrs	r4, r4, #2
 800054a:	2600      	movs	r6, #0
 800054c:	42a6      	cmp	r6, r4
 800054e:	d109      	bne.n	8000564 <__libc_init_array+0x24>
 8000550:	4d0b      	ldr	r5, [pc, #44]	@ (8000580 <__libc_init_array+0x40>)
 8000552:	4c0c      	ldr	r4, [pc, #48]	@ (8000584 <__libc_init_array+0x44>)
 8000554:	f000 f818 	bl	8000588 <_init>
 8000558:	1b64      	subs	r4, r4, r5
 800055a:	10a4      	asrs	r4, r4, #2
 800055c:	2600      	movs	r6, #0
 800055e:	42a6      	cmp	r6, r4
 8000560:	d105      	bne.n	800056e <__libc_init_array+0x2e>
 8000562:	bd70      	pop	{r4, r5, r6, pc}
 8000564:	f855 3b04 	ldr.w	r3, [r5], #4
 8000568:	4798      	blx	r3
 800056a:	3601      	adds	r6, #1
 800056c:	e7ee      	b.n	800054c <__libc_init_array+0xc>
 800056e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000572:	4798      	blx	r3
 8000574:	3601      	adds	r6, #1
 8000576:	e7f2      	b.n	800055e <__libc_init_array+0x1e>
 8000578:	080005a0 	.word	0x080005a0
 800057c:	080005a0 	.word	0x080005a0
 8000580:	080005a0 	.word	0x080005a0
 8000584:	080005a4 	.word	0x080005a4

08000588 <_init>:
 8000588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800058a:	bf00      	nop
 800058c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800058e:	bc08      	pop	{r3}
 8000590:	469e      	mov	lr, r3
 8000592:	4770      	bx	lr

08000594 <_fini>:
 8000594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000596:	bf00      	nop
 8000598:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800059a:	bc08      	pop	{r3}
 800059c:	469e      	mov	lr, r3
 800059e:	4770      	bx	lr
